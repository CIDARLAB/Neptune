version: "3"
services:
    
    s3local:
      image: minio/minio
      ports:
        - "9000:9000"
        - "9001:9001"
      volumes:
        - minio_data_container:/data/s3
      environment:
        MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
        MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
      command: server /data/s3 --console-address ":9001"
      restart: unless-stopped

    broker:
      image: redis:latest
      container_name: realtime-comm-server
      ports:
        - "6379:6379"
      restart: unless-stopped

    backend-database:
      image: mongo:latest
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ports:
        - 27017:27017
      volumes:
        - mongodb_data_container:/data/db
      restart: unless-stopped

    worker:
      build: 
        context: .
        dockerfile: ./job-runner/Dockerfile
      container_name: demo_worker
      command: python test.py #celery --app=simple worker --loglevel=info
      volumes:
        - .:/usr/src
      environment:
        MONGO_INITDB_NAME: ${MONGO_INITDB_NAME}
        MONGO_HOST: ${MONGO_HOST}
        MONGO_PORT: ${MONGO_PORT}
        CELERY_BROKER_URL: ${CELERY_BROKER_URL}
        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
        AWS_ENDPOINT_URL: ${AWS_ENDPOINT_URL}
        # - CELERY_RESULT_BACKEND=db+postgresql://dbc:dbc@backend:5432/celery
      depends_on:
        - broker
        - backend-database
        - s3local
      restart: unless-stopped

    primitives-server:
      build:
        context: ./primitives-server
        dockerfile: ./primitives-server.Dockerfile
      restart: unless-stopped
      ports:
        - 6060:6060
      command: npm run start

volumes:
  mongodb_data_container:
  minio_data_container: