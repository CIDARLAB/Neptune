# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class FileResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, file_id: str=None, file_name: str=None, created_at: str=None, updated_at: str=None, s3_path: str=None, file_extension: str=None):  # noqa: E501
        """FileResponse - a model defined in Swagger

        :param file_id: The file_id of this FileResponse.  # noqa: E501
        :type file_id: str
        :param file_name: The file_name of this FileResponse.  # noqa: E501
        :type file_name: str
        :param created_at: The created_at of this FileResponse.  # noqa: E501
        :type created_at: str
        :param updated_at: The updated_at of this FileResponse.  # noqa: E501
        :type updated_at: str
        :param s3_path: The s3_path of this FileResponse.  # noqa: E501
        :type s3_path: str
        :param file_extension: The file_extension of this FileResponse.  # noqa: E501
        :type file_extension: str
        """
        self.swagger_types = {
            'file_id': str,
            'file_name': str,
            'created_at': str,
            'updated_at': str,
            's3_path': str,
            'file_extension': str
        }

        self.attribute_map = {
            'file_id': 'file_id',
            'file_name': 'file_name',
            'created_at': 'created_at',
            'updated_at': 'updated_at',
            's3_path': 's3_path',
            'file_extension': 'file_extension'
        }
        self._file_id = file_id
        self._file_name = file_name
        self._created_at = created_at
        self._updated_at = updated_at
        self._s3_path = s3_path
        self._file_extension = file_extension

    @classmethod
    def from_dict(cls, dikt) -> 'FileResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FileResponse of this FileResponse.  # noqa: E501
        :rtype: FileResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_id(self) -> str:
        """Gets the file_id of this FileResponse.


        :return: The file_id of this FileResponse.
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id: str):
        """Sets the file_id of this FileResponse.


        :param file_id: The file_id of this FileResponse.
        :type file_id: str
        """

        self._file_id = file_id

    @property
    def file_name(self) -> str:
        """Gets the file_name of this FileResponse.


        :return: The file_name of this FileResponse.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name: str):
        """Sets the file_name of this FileResponse.


        :param file_name: The file_name of this FileResponse.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def created_at(self) -> str:
        """Gets the created_at of this FileResponse.


        :return: The created_at of this FileResponse.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this FileResponse.


        :param created_at: The created_at of this FileResponse.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> str:
        """Gets the updated_at of this FileResponse.


        :return: The updated_at of this FileResponse.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: str):
        """Sets the updated_at of this FileResponse.


        :param updated_at: The updated_at of this FileResponse.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def s3_path(self) -> str:
        """Gets the s3_path of this FileResponse.


        :return: The s3_path of this FileResponse.
        :rtype: str
        """
        return self._s3_path

    @s3_path.setter
    def s3_path(self, s3_path: str):
        """Sets the s3_path of this FileResponse.


        :param s3_path: The s3_path of this FileResponse.
        :type s3_path: str
        """

        self._s3_path = s3_path

    @property
    def file_extension(self) -> str:
        """Gets the file_extension of this FileResponse.


        :return: The file_extension of this FileResponse.
        :rtype: str
        """
        return self._file_extension

    @file_extension.setter
    def file_extension(self, file_extension: str):
        """Sets the file_extension of this FileResponse.


        :param file_extension: The file_extension of this FileResponse.
        :type file_extension: str
        """

        self._file_extension = file_extension
