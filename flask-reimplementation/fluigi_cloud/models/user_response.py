# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fluigi_cloud.models.base_model_ import Model
from fluigi_cloud import util


class UserResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user_id: str=None, first_name: str=None, last_name: str=None, email: str=None, workspaces: List[str]=None, jobs: List[str]=None):  # noqa: E501
        """UserResponse - a model defined in Swagger

        :param user_id: The user_id of this UserResponse.  # noqa: E501
        :type user_id: str
        :param first_name: The first_name of this UserResponse.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this UserResponse.  # noqa: E501
        :type last_name: str
        :param email: The email of this UserResponse.  # noqa: E501
        :type email: str
        :param workspaces: The workspaces of this UserResponse.  # noqa: E501
        :type workspaces: List[str]
        :param jobs: The jobs of this UserResponse.  # noqa: E501
        :type jobs: List[str]
        """
        self.swagger_types = {
            'user_id': str,
            'first_name': str,
            'last_name': str,
            'email': str,
            'workspaces': List[str],
            'jobs': List[str]
        }

        self.attribute_map = {
            'user_id': 'user_id',
            'first_name': 'first_name',
            'last_name': 'last_name',
            'email': 'email',
            'workspaces': 'workspaces',
            'jobs': 'jobs'
        }
        self._user_id = user_id
        self._first_name = first_name
        self._last_name = last_name
        self._email = email
        self._workspaces = workspaces
        self._jobs = jobs

    @classmethod
    def from_dict(cls, dikt) -> 'UserResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserResponse of this UserResponse.  # noqa: E501
        :rtype: UserResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> str:
        """Gets the user_id of this UserResponse.


        :return: The user_id of this UserResponse.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this UserResponse.


        :param user_id: The user_id of this UserResponse.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def first_name(self) -> str:
        """Gets the first_name of this UserResponse.


        :return: The first_name of this UserResponse.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this UserResponse.


        :param first_name: The first_name of this UserResponse.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this UserResponse.


        :return: The last_name of this UserResponse.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this UserResponse.


        :param last_name: The last_name of this UserResponse.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def email(self) -> str:
        """Gets the email of this UserResponse.


        :return: The email of this UserResponse.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this UserResponse.


        :param email: The email of this UserResponse.
        :type email: str
        """

        self._email = email

    @property
    def workspaces(self) -> List[str]:
        """Gets the workspaces of this UserResponse.


        :return: The workspaces of this UserResponse.
        :rtype: List[str]
        """
        return self._workspaces

    @workspaces.setter
    def workspaces(self, workspaces: List[str]):
        """Sets the workspaces of this UserResponse.


        :param workspaces: The workspaces of this UserResponse.
        :type workspaces: List[str]
        """

        self._workspaces = workspaces

    @property
    def jobs(self) -> List[str]:
        """Gets the jobs of this UserResponse.


        :return: The jobs of this UserResponse.
        :rtype: List[str]
        """
        return self._jobs

    @jobs.setter
    def jobs(self, jobs: List[str]):
        """Sets the jobs of this UserResponse.


        :param jobs: The jobs of this UserResponse.
        :type jobs: List[str]
        """

        self._jobs = jobs
